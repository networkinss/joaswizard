openapi: 3.0.2
info:
  version: 1.0.0
  title: {{capResource}} API
  description: >-
    This is an OpenAPI Specification created by oasjwizard (https://github.com/networkinss/oasjwizard), 
    inspired by oas-wizard (https://github.com/pafmon/oas-wizard).  
  contact:
    name: Oliver Glas
    email: oliver.glas@inss.ch
    url: http://inss.ch
  license:
    name: Apache
    url: http://opensource.org/licenses/Apache-2.0
servers:
  - url: http://localhost:8080/v1
    description: Local environment.
paths:
  /{{resources}}:
    get:
      description: Returns all {{resources}}
      operationId: get{{capResources}}
      responses:
        '200':
          description: {{capResource}} List
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/{{capResource}}'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorModel'
    post:
      description: Creates a new {{resource}}
      operationId: add{{capResource}}
      responses:
        '201':
          description: {{resource}} created
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorModel'
      requestBody:
        x-name: {{resource}}
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/{{capResource}}'
        description: {{capResource}} to be created
        required: true
  /{{resources}}/{{openCurlyBrace}}{{resourceId}}{{closeCurlyBrace}}:
    get:
      description: >-
        Returns a {{resource}} by {{resourceId}}
      operationId: find{{capResource}}By{{resourceId}}
      parameters:
        - name: {{resourceId}}
          in: path
          description: {{resourceId}} of {{resource}} to fetch
          required: true
          schema:
            type: string
      responses:
        '200':
          description: {{capResource}} returned
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/{{capResource}}'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorModel'
    delete:
      description: deletes a single {{resource}} based on the {{resourceId}}
      operationId: delete{{capResource}}
      parameters:
        - name: {{resourceId}}
          in: path
          description: ID of {{resource}} to delete
          required: true
          schema:
            type: string
      responses:
        '204':
          description: {{resource}} deleted
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorModel'
    put:
      description: Update a {{resource}} based on its {{resourceId}}
      operationId: update{{capResource}}
      parameters:
        - name: {{resourceId}}
          in: path
          description: ID of {{resource}} to put
          required: true
          schema:
            type: string
      responses:
        '204':
          description: {{resource}} updated
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorModel'
      requestBody:
        x-name: {{resource}}
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/{{capResource}}'
        description: {{capResource}} to be updated
        required: true
components:
  schemas:
    errorModel:
      type: object
      required:
        - code
        - message
      properties:
        code:
          type: integer
          format: int32
        message:
          type: string