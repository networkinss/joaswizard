openapi: 3.0.2
info:
  version: 1.0.0
  title: Object API
  description: OpenAPI specification generated by Joaswizard (https://github.com/networkinss/joaswizard),
  contact:
    name: John Doe
    email: john.doe@example.com
    url: http://example.com
  license:
    name: Apache 2.0 license
    url: http://opensource.org/licenses/Apache-2.0
servers:
  - url: http://localhost:8080
    description: Local environment.

paths:
  /objects:
    get:
      description: List of objects.
      summary: List of objects
      operationId: getObjectList
      responses:
        '200':
          description: Object List
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Object'
        '400':
          description: Bad request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
        '401':
          description: Authorization information is missing or invalid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
        '500':
          description: Unexpected internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
  /object:
    post:
      description: Creates new object.
      summary: Creates new object
      operationId: addObject
      responses:
        '201':
          description: object created
        '400':
          description: Bad request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
        '401':
          description: Authorization information is missing or invalid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
        '500':
          description: Unexpected internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
      requestBody:
        x-name: object
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Object'
        description: Object to be created
        required: true
  /object/{ID}:
    get:
      description: Returns object by ID.
      summary: Returns object by ID
      operationId: findObjectByID
      parameters:
        - name: ID
          in: path
          description: ID of object to fetch
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Object returned
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Object'
        '400':
          description: Bad request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
        '401':
          description: Authorization information is missing or invalid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
        '404':
          description: Data with the specified ID was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
        '500':
          description: Unexpected internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
    delete:
      description: Deletes object by ID.
      summary: Deletes object by ID
      operationId: deleteObject
      parameters:
        - name: ID
          in: path
          description: ID of object to delete
          required: true
          schema:
            type: string
      responses:
        '204':
          description: object deleted
        '400':
          description: Bad request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
        '401':
          description: Authorization information is missing or invalid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
        '404':
          description: Data with the specified ID was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
        '500':
          description: Unexpected internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
    put:
      description: Updates object by ID.
      summary: Updates object by ID
      operationId: updateObject
      parameters:
        - name: ID
          in: path
          description: ID of object to put
          required: true
          schema:
            type: string
      responses:
        '204':
          description: object updated
        '400':
          description: Bad request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
        '401':
          description: Authorization information is missing or invalid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
        '404':
          description: Data with the specified ID was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
        '500':
          description: Unexpected internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
      requestBody:
        x-name: object
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Object'
        description: Object to be updated
        required: true
components:
  schemas:
    ErrorModel:
      type: object
      required:
        - code
        - message
      properties:
        code:
          type: integer
          format: int32
        message:
          type: string
    Object:
      type: object
      properties:
        price:
          type: number
          example: 12.05
      required:
      - price
