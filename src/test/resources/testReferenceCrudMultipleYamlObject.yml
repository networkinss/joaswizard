openapi: 3.0.2
info:
  version: 1.0.0
  title: Pet, customer, invoice API
  description: OpenAPI specification generated by Joaswizard (https://github.com/networkinss/joaswizard).
  contact:
    name: John Doe
    email: john.doe@example.com
    url: http://example.com
  license:
    name: Apache 2.0 license
    url: http://opensource.org/licenses/Apache-2.0
servers:
  - url: http://localhost:8080
    description: Local environment.
paths:
  /pets:
    get:
      description: List of pets.
      summary: List of pets
      operationId: getPetList
      responses:
        '200':
          description: Pet List
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Pet'
        '400':
          description: Bad request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
        '401':
          description: Authorization information is missing or invalid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
        '500':
          description: Unexpected internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
  /pet:
    post:
      description: Creates new pet.
      summary: Creates new pet
      operationId: addPet
      responses:
        '201':
          description: PET created
        '400':
          description: Bad request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
        '401':
          description: Authorization information is missing or invalid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
        '500':
          description: Unexpected internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
      requestBody:
        x-name: PET
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Pet'
        description: Pet to be created
        required: true
  /pet/{name}:
    get:
      description: Returns pet by name.
      summary: Returns pet by name
      operationId: findPetByname
      parameters:
        - name: name
          in: path
          description: name of PET to fetch
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Pet returned
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Pet'
        '400':
          description: Bad request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
        '401':
          description: Authorization information is missing or invalid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
        '404':
          description: Data with the specified ID was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
        '500':
          description: Unexpected internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
    delete:
      description: Deletes pet by name.
      summary: Deletes pet by name
      operationId: deletePet
      parameters:
        - name: name
          in: path
          description: ID of PET to delete
          required: true
          schema:
            type: string
      responses:
        '204':
          description: PET deleted
        '400':
          description: Bad request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
        '401':
          description: Authorization information is missing or invalid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
        '404':
          description: Data with the specified ID was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
        '500':
          description: Unexpected internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
    put:
      description: Updates pet by name.
      summary: Updates pet by name
      operationId: updatePet
      parameters:
        - name: name
          in: path
          description: ID of PET to put
          required: true
          schema:
            type: string
      responses:
        '204':
          description: PET updated
        '400':
          description: Bad request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
        '401':
          description: Authorization information is missing or invalid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
        '404':
          description: Data with the specified ID was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
        '500':
          description: Unexpected internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
      requestBody:
        x-name: PET
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Pet'
        description: Pet to be updated
        required: true
  /customers:
    get:
      description: List of customers.
      summary: List of customers
      operationId: getCustomerList
      responses:
        '200':
          description: Customer List
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Customer'
        '400':
          description: Bad request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
        '401':
          description: Authorization information is missing or invalid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
        '500':
          description: Unexpected internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
  /customer:
    post:
      description: Creates new customer.
      summary: Creates new customer
      operationId: addCustomer
      responses:
        '201':
          description: Customer created
        '400':
          description: Bad request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
        '401':
          description: Authorization information is missing or invalid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
        '500':
          description: Unexpected internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
      requestBody:
        x-name: Customer
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Customer'
        description: Customer to be created
        required: true
  /customer/{name}:
    get:
      description: Returns customer by name.
      summary: Returns customer by name
      operationId: findCustomerByname
      parameters:
        - name: name
          in: path
          description: name of Customer to fetch
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Customer returned
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Customer'
        '400':
          description: Bad request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
        '401':
          description: Authorization information is missing or invalid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
        '404':
          description: Data with the specified ID was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
        '500':
          description: Unexpected internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
    delete:
      description: Deletes customer by name.
      summary: Deletes customer by name
      operationId: deleteCustomer
      parameters:
        - name: name
          in: path
          description: ID of Customer to delete
          required: true
          schema:
            type: string
      responses:
        '204':
          description: Customer deleted
        '400':
          description: Bad request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
        '401':
          description: Authorization information is missing or invalid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
        '404':
          description: Data with the specified ID was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
        '500':
          description: Unexpected internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
    put:
      description: Updates customer by name.
      summary: Updates customer by name
      operationId: updateCustomer
      parameters:
        - name: name
          in: path
          description: ID of Customer to put
          required: true
          schema:
            type: string
      responses:
        '204':
          description: Customer updated
        '400':
          description: Bad request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
        '401':
          description: Authorization information is missing or invalid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
        '404':
          description: Data with the specified ID was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
        '500':
          description: Unexpected internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
      requestBody:
        x-name: Customer
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Customer'
        description: Customer to be updated
        required: true
  /invoices:
    get:
      description: List of invoices.
      summary: List of invoices
      operationId: getInvoiceList
      responses:
        '200':
          description: Invoice List
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Invoice'
        '400':
          description: Bad request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
        '401':
          description: Authorization information is missing or invalid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
        '500':
          description: Unexpected internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
  /invoice:
    post:
      description: Creates new invoice.
      summary: Creates new invoice
      operationId: addInvoice
      responses:
        '201':
          description: invoice created
        '400':
          description: Bad request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
        '401':
          description: Authorization information is missing or invalid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
        '500':
          description: Unexpected internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
      requestBody:
        x-name: invoice
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Invoice'
        description: Invoice to be created
        required: true
  /invoice/{name}:
    get:
      description: Returns invoice by name.
      summary: Returns invoice by name
      operationId: findInvoiceByname
      parameters:
        - name: name
          in: path
          description: name of invoice to fetch
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Invoice returned
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Invoice'
        '400':
          description: Bad request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
        '401':
          description: Authorization information is missing or invalid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
        '404':
          description: Data with the specified ID was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
        '500':
          description: Unexpected internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
    delete:
      description: Deletes invoice by name.
      summary: Deletes invoice by name
      operationId: deleteInvoice
      parameters:
        - name: name
          in: path
          description: ID of invoice to delete
          required: true
          schema:
            type: string
      responses:
        '204':
          description: invoice deleted
        '400':
          description: Bad request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
        '401':
          description: Authorization information is missing or invalid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
        '404':
          description: Data with the specified ID was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
        '500':
          description: Unexpected internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
    put:
      description: Updates invoice by name.
      summary: Updates invoice by name
      operationId: updateInvoice
      parameters:
        - name: name
          in: path
          description: ID of invoice to put
          required: true
          schema:
            type: string
      responses:
        '204':
          description: invoice updated
        '400':
          description: Bad request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
        '401':
          description: Authorization information is missing or invalid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
        '404':
          description: Data with the specified ID was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
        '500':
          description: Unexpected internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
      requestBody:
        x-name: invoice
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Invoice'
        description: Invoice to be updated
        required: true
components:
  schemas:
    ErrorModel:
      type: object
      required:
        - code
        - message
      properties:
        code:
          type: integer
          format: int32
        message:
          type: string
    Pet:
      type: object
      properties:
        name:
          type: string
          minLength: 8
          example: Underdog
        amount:
          type: integer
          example: 3
        price:
          type: number
          example: 12.05
        status:
          type: string
          minLength: 9
          example: available
        tags:
          type: array
          items:
            type: string
          minLength: 5
          example: [dog, 4paws]
        possiblerabatt:
          type: array
          items:
            type: integer
          example: [10, 15, 20]
      required:
      - name
      - amount
      - price
      - status
      - tags
      - possiblerabatt
    Customer:
      type: object
      properties:
        firstname:
          type: string
          minLength: 4
          example: John
        lastname:
          type: string
          minLength: 3
          example: Doe
        age:
          type: integer
          example: 22
        city:
          type: string
          minLength: 6
          example: Zurich
      required:
      - firstname
      - lastname
      - age
      - city
    Invoice:
      type: object
      properties:
        product:
          type: string
          minLength: 3
          example: Pet
        amount:
          type: integer
          example: 1
        price:
          type: number
          example: 12.05
      required:
      - product
      - amount
      - price
