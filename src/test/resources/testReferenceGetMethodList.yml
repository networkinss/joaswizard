openapi: 3.0.2
info:
  version: 1.0.0
  title: Cat, fish, dog API
  description: >-
    This is an OpenAPI Specification generated by Joaswizard (https://github.com/networkinss/joaswizard), 
  contact:
    name: Oliver Glas
    email: oliver.glas@inss.ch
    url: http://inss.ch
  license:
    name: Apache
    url: http://opensource.org/licenses/Apache-2.0
servers:
  - url: http://localhost:8080/v1
    description: Local environment.
    
paths:
  /cats:
    get:
      description: Returns all CATs
      operationId: getAllCATs
      responses:
        '200':
          description: Cat List
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Cat'
        '400':
          description: Bad request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
        '401':
          description: Authorization information is missing or invalid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
        '500':
          description: Unexpected internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
  /cat/{ID}:
    get:
      description: Returns a CAT by ID
      operationId: findCatByID
      parameters:
        - name: ID
          in: path
          description: ID of CAT to fetch
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Cat returned
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Cat'
        '400':
          description: Bad request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
        '401':
          description: Authorization information is missing or invalid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
        '404':
          description: Data with the specified ID was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
        '500':
          description: Unexpected internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'


  /fishs:
    get:
      description: Returns all Fishs
      operationId: getAllFishs
      responses:
        '200':
          description: Fish List
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Fish'
        '400':
          description: Bad request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
        '401':
          description: Authorization information is missing or invalid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
        '500':
          description: Unexpected internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
  /fish/{ID}:
    get:
      description: Returns a Fish by ID
      operationId: findFishByID
      parameters:
        - name: ID
          in: path
          description: ID of Fish to fetch
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Fish returned
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Fish'
        '400':
          description: Bad request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
        '401':
          description: Authorization information is missing or invalid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
        '404':
          description: Data with the specified ID was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
        '500':
          description: Unexpected internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'


  /dogs:
    get:
      description: Returns all Dogs
      operationId: getAllDogs
      responses:
        '200':
          description: Dog List
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Dog'
        '400':
          description: Bad request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
        '401':
          description: Authorization information is missing or invalid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
        '500':
          description: Unexpected internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
  /dog/{ID}:
    get:
      description: Returns a Dog by ID
      operationId: findDogByID
      parameters:
        - name: ID
          in: path
          description: ID of Dog to fetch
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Dog returned
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Dog'
        '400':
          description: Bad request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
        '401':
          description: Authorization information is missing or invalid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
        '404':
          description: Data with the specified ID was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
        '500':
          description: Unexpected internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'

components:
  schemas:
    ErrorModel:
      type: object
      required:
        - code
        - message
      properties:
        code:
          type: integer
          format: int32
        message:
          type: string
    Cat:
      type: object
      properties:
        id:
          type: integer
          format: int32
          maxLength: 2
          example: 1
          description: signed 32 bits
        zweitername:
          type: integer
          format: int64
          maxLength: 3
          example: 2
          description: signed 64 bits (a.k.a long)
        dritter name:
          type: number
          format: float
          maxLength: 4
          example: 1.0
          description: Die dritte Beschreibung.
        einenum:
          type: number
          format: double
          example: 2.0
          description: Ein Enum Beispiel.
        eins:
          type: string
          format: string
          example: eins
        zwei:
          type: string
          format: byte
          example: byte
          description: base64 encoded characters
        drei:
          type: string
          format: binary
          example: binary
          description: any sequence of octets
        vier:
          type: boolean
          format: boolean
          example: true
        fünf:
          type: string
          format: date
          example: date
          description: As defined by full-date - RFC3339
        sechs:
          type: string
          format: date-time
          example: Date-time
          description: As defined by date-time - RFC3339
        sieben:
          type: string
          format: password
          example: password
          description: A hint to UIs to obscure input.
        acht:
          type: string
          format: enum
          enum:
          - Yes
          - No
          - '0'
          example: [eins,zwei,drei]
          description: Der Array
      required:
      - ID
      - zweiterName
      - EinEnum
      - eins
      - drei
      - fünf
      - sechs
      - sieben
      - acht
    Fish:
      type: object
      properties:
        id:
          type: integer
          example: 1
        zweitername3:
          type: string
          format: date
          minLength: 1
          example: string
        dritter name3:
          type: string
          format: char
          minLength: 1
          example: string
      required:
      - ID
      - zweiterName3
    Dog:
      type: object
      properties:
        id:
          type: integer
          example: 1
        zweitername:
          type: string
          format: date
          minLength: 1
          example: string
        dritter name:
          type: string
          format: char
          minLength: 1
          example: string
      required:
      - ID
      - zweiterName
