openapi: 3.0.2
info:
  version: 1.0.0
  title: Pet API
  description: >-
    This is an OpenAPI Specification generated by Joaswizard (https://github.com/networkinss/joaswizard), 
  contact:
    name: Oliver Glas
    email: oliver.glas@inss.ch
    url: http://inss.ch
  license:
    name: Apache 2.0 license
    url: http://opensource.org/licenses/Apache-2.0
servers:
  - url: http://localhost:8080/v1
    description: Local environment.
    
paths:
  /pets:
    get:
      description: Returns all pets
      operationId: getAllPets
      responses:
        '200':
          description: Pet List
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Pet'
        '400':
          description: Bad request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
        '401':
          description: Authorization information is missing or invalid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
        '500':
          description: Unexpected internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
    post:
      description: Creates a new pet
      operationId: addPet
      responses:
        '201':
          description: pet created
        '400':
          description: Bad request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
        '401':
          description: Authorization information is missing or invalid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
        '500':
          description: Unexpected internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
      requestBody:
        x-name: pet
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Pet'
        description: Pet to be created
        required: true
  /pet/{name}:
    get:
      description: Returns a pet by name
      operationId: findPetByname
      parameters:
        - name: name
          in: path
          description: name of pet to fetch
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Pet returned
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Pet'
        '400':
          description: Bad request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
        '401':
          description: Authorization information is missing or invalid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
        '404':
          description: Data with the specified ID was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
        '500':
          description: Unexpected internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
    delete:
      description: deletes a single pet based on the name
      operationId: deletePet
      parameters:
        - name: name
          in: path
          description: ID of pet to delete
          required: true
          schema:
            type: string
      responses:
        '204':
          description: pet deleted
        '400':
          description: Bad request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
        '401':
          description: Authorization information is missing or invalid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
        '404':
          description: Data with the specified ID was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
        '500':
          description: Unexpected internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
    put:
      description: Update a pet based on its name
      operationId: updatePet
      parameters:
        - name: name
          in: path
          description: ID of pet to put
          required: true
          schema:
            type: string
      responses:
        '204':
          description: pet updated
        '400':
          description: Bad request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
        '401':
          description: Authorization information is missing or invalid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
        '404':
          description: Data with the specified ID was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
        '500':
          description: Unexpected internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
      requestBody:
        x-name: pet
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Pet'
        description: Pet to be updated
        required: true
components:
  schemas:
    ErrorModel:
      type: object
      required:
        - code
        - message
      properties:
        code:
          type: integer
          format: int32
        message:
          type: string
    Pet:
      type: object
      properties:
        name:
          type: string
          minLength: 1
          example: Underdog
        price:
          type: number
          example: 12.05
        status:
          type: string
          minLength: 1
          example: available
        tags:
          type: string
          minLength: 1
          example: [dog, 4paws]
      required:
      - name
      - price
      - status
      - tags
