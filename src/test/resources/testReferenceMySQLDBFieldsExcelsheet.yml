openapi: 3.0.2
info:
  version: 1.0.0
  title: Invoice, customer, pet API
  description: OpenAPI specification generated by Joaswizard (https://github.com/networkinss/joaswizard).
  contact:
    name: John Doe
    email: john.doe@example.com
    url: http://example.com
  license:
    name: Apache 2.0 license
    url: http://opensource.org/licenses/Apache-2.0
servers:
  - url: http://localhost:8080/api/v1
    description: Local environment.
paths:
  /invoices:
    post:
      description: Creates new invoice.
      summary: Creates new invoice
      operationId: addInvoice
      responses:
        '201':
          description: Invoice created
        '400':
          description: Bad request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
        '401':
          description: Authorization information is missing or invalid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
        '500':
          description: Unexpected internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
      requestBody:
        x-name: Invoice
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Invoice'
        description: Invoice to be created
        required: true
  /invoice/{id}:
    delete:
      description: Deletes invoice by id.
      summary: Deletes invoice by id
      operationId: deleteInvoice
      parameters:
        - name: id
          in: path
          description: ID of Invoice to delete
          required: true
          schema:
            type: string
      responses:
        '204':
          description: Invoice deleted
        '400':
          description: Bad request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
        '401':
          description: Authorization information is missing or invalid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
        '404':
          description: Data with the specified ID was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
        '500':
          description: Unexpected internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
    patch:
      description: Patches invoice by id,
      summary: Patches invoice by id
      operationId: patchInvoice
      parameters:
        - name: id
          in: path
          description: ID of Invoice to put
          required: true
          schema:
            type: string
      responses:
        '204':
          description: Invoice patched.
        '400':
          description: Bad request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
        '401':
          description: Authorization information is missing or invalid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
        '404':
          description: Data with the specified ID was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
        '500':
          description: Unexpected internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
      requestBody:
        x-name: Invoice
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Invoice'
        description: Invoice to be updated
        required: true
  /customers:
    post:
      description: Creates new customer.
      summary: Creates new customer
      operationId: addCustomer
      responses:
        '201':
          description: Customer created
        '400':
          description: Bad request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
        '401':
          description: Authorization information is missing or invalid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
        '500':
          description: Unexpected internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
      requestBody:
        x-name: Customer
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Customer'
        description: Customer to be created
        required: true
  /customer/{id}:
    delete:
      description: Deletes customer by id.
      summary: Deletes customer by id
      operationId: deleteCustomer
      parameters:
        - name: id
          in: path
          description: ID of Customer to delete
          required: true
          schema:
            type: string
      responses:
        '204':
          description: Customer deleted
        '400':
          description: Bad request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
        '401':
          description: Authorization information is missing or invalid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
        '404':
          description: Data with the specified ID was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
        '500':
          description: Unexpected internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
    patch:
      description: Patches customer by id,
      summary: Patches customer by id
      operationId: patchCustomer
      parameters:
        - name: id
          in: path
          description: ID of Customer to put
          required: true
          schema:
            type: string
      responses:
        '204':
          description: Customer patched.
        '400':
          description: Bad request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
        '401':
          description: Authorization information is missing or invalid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
        '404':
          description: Data with the specified ID was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
        '500':
          description: Unexpected internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
      requestBody:
        x-name: Customer
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Customer'
        description: Customer to be updated
        required: true
  /pets:
    post:
      description: Creates new pet.
      summary: Creates new pet
      operationId: addPet
      responses:
        '201':
          description: Pet created
        '400':
          description: Bad request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
        '401':
          description: Authorization information is missing or invalid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
        '500':
          description: Unexpected internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
      requestBody:
        x-name: Pet
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Pet'
        description: Pet to be created
        required: true
  /pet/{id}:
    delete:
      description: Deletes pet by id.
      summary: Deletes pet by id
      operationId: deletePet
      parameters:
        - name: id
          in: path
          description: ID of Pet to delete
          required: true
          schema:
            type: string
      responses:
        '204':
          description: Pet deleted
        '400':
          description: Bad request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
        '401':
          description: Authorization information is missing or invalid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
        '404':
          description: Data with the specified ID was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
        '500':
          description: Unexpected internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
    patch:
      description: Patches pet by id,
      summary: Patches pet by id
      operationId: patchPet
      parameters:
        - name: id
          in: path
          description: ID of Pet to put
          required: true
          schema:
            type: string
      responses:
        '204':
          description: Pet patched.
        '400':
          description: Bad request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
        '401':
          description: Authorization information is missing or invalid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
        '404':
          description: Data with the specified ID was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
        '500':
          description: Unexpected internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
      requestBody:
        x-name: Pet
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Pet'
        description: Pet to be updated
        required: true
components:
  schemas:
    ErrorModel:
      type: object
      required:
        - code
        - message
      properties:
        code:
          type: integer
          format: int32
        message:
          type: string
    Invoice:
      type: object
      properties:
        id:
          type: integer
          format: int32
          maxLength: 14
          example: 1
          description: 'signed 32 bit'
        amount:
          type: integer
          format: int32
          maxLength: 3
          example: 2
          description: 'signed 64 bit (a.k.a long)'
        price:
          type: number
          format: double
          maxLength: 4
          example: 1.0
          description: 'A float sample'
        option:
          type: number
          format: double
          enum:
          - 1.0
          - 2.0
          - 5.0
          - 8.0
          example: 2.0
          description: 'An enum example.'
        sometext:
          type: string
          description: 'An example of a definition of the type via the database type. The file mapping.json contains the mapping. If none is available, an internal default is used.'
        one:
          type: string
          example: A string sample
        two:
          type: string
          format: byte
          example: U3dhZ2dlciByb2Nrcw==
          description: 'base64 encoded characters'
        three:
          type: string
          format: binary
          description: 'any sequence of octets'
        four:
          type: boolean
          example: true
        five:
          type: string
          format: date
          pattern: '^\d{3}-\d{2}-\d{4}$'
          minLength: 10
          maxLength: 10
          example: 1998-12-31
          description: 'As defined by full-date - RFC3339'
        six:
          type: string
          format: date-time
          example: 2019-10-12T07:20:50.52Z
          description: 'As defined by date-time - RFC3339'
        seven:
          type: string
          format: password
          example: asecret
          description: 'A hint to UIs to obscure input.'
        eight:
          type: string
          enum:
          - Yes
          - No
          - '0'
          example: Yes
          description: 'An enum example.'
        nine:
          type: string
          format: date-time
          description: 'These types from DBDatatype must be mapped in the mapping.json. Oastype would overwrite it if not empty.'
        ten:
          type: string
          minLength: 1
          description: 'Database type CHAR'
        eleven:
          type: string
          format: date
          minLength: 10
          description: 'Database type DATE'
        twelve:
          type: integer
          format: int32
          minLength: 1
          description: 'Database type SMALLINT'
        thirteen:
          type: string
          minLength: 1
          description: 'Database type VARCHAR'
        fourteen:
          type: number
          format: double
          description: 'Database type DECIMAL'
        fifteen:
          type: integer
          format: int64
          description: 'Database type INTEGER'
      required:
      - id
      - amount
      - option
      - one
      - three
      - five
      - six
      - seven
      - eight
    Customer:
      type: object
      properties:
        id:
          type: integer
          format: int32
          description: 'A description'
        secondname:
          type: string
          description: 'This is a wrongly typed datatype which is ignored and type string is used instead.'
        thirdname:
          type: string
          description: 'This is a wrongly typed datatype which is ignored and type string is used instead.'
      required:
      - id
      - secondname
    Pet:
      type: object
      properties:
        id:
          type: integer
          format: int32
          description: 'A description'
        secondname:
          type: string
          description: 'Another description'
        thirdname:
          type: string
          description: 'Yet another description.'
      required:
      - id
      - secondname
